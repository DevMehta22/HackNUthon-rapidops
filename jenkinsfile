pipeline {
    agent any

    environment {
        PYTHON_ENV = "venv"
        NODE_ENV = "node_modules"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/DevMehta22/HackNUthon-rapidops.git'
            }
        }

        stage('Setup Environment') {
            steps {
                script {
                    // Setup Python Environment
                    sh 'python3 -m venv $PYTHON_ENV'
                    sh 'source $PYTHON_ENV/bin/activate && pip install -r requirements.txt'

                    // Setup Node.js Environment
                    sh 'npm install'
                }
            }
        }

        stage('Convert Figma to JSON') {
            steps {
                script {
                    sh 'python3 figma_to_json/convert.py'
                }
            }
        }

        stage('Generate Test Cases using RAG Model') {
            steps {
                script {
                    sh 'python3 RAG_model/generate_tests.py'
                }
            }
        }

        stage('Run Selenium Tests (Frontend)') {
            steps {
                script {
                    sh 'pytest selenium_tests/'
                }
            }
        }

        stage('Run Pytest (Backend API)') {
            steps {
                script {
                    sh 'pytest pytest_tests/'
                }
            }
        }

        stage('Generate Test Reports') {
            steps {
                script {
                    sh 'allure generate test_reports/ -o allure-report'
                }
            }
        }

        stage('Publish Test Reports') {
            steps {
                publishHTML(target: [
                    reportDir: 'allure-report',
                    reportFiles: 'index.html',
                    reportName: 'Allure Test Report'
                ])
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'test_reports/**', fingerprint: true
        }
        success {
            echo '✅ Tests Passed Successfully!'
        }
        failure {
            echo '❌ Some Tests Failed!'
        }
    }
}