{"created": 1743341860.5694015, "duration": 2.3362560272216797, "exitcode": 1, "root": "/home/runner/work/HackNUthon-rapidops/HackNUthon-rapidops", "environment": {}, "summary": {"failed": 1, "passed": 2, "total": 3, "collected": 3}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "Py-test", "type": "Dir"}]}, {"nodeid": "Py-test/test_api.py", "outcome": "passed", "result": [{"nodeid": "Py-test/test_api.py::test_api[test_case0]", "type": "Function", "lineno": 54}, {"nodeid": "Py-test/test_api.py::test_api[test_case1]", "type": "Function", "lineno": 54}, {"nodeid": "Py-test/test_api.py::test_api[test_case2]", "type": "Function", "lineno": 54}]}, {"nodeid": "Py-test", "outcome": "passed", "result": [{"nodeid": "Py-test/test_api.py", "type": "Module"}]}], "tests": [{"nodeid": "Py-test/test_api.py::test_api[test_case0]", "lineno": 54, "outcome": "failed", "keywords": ["test_api[test_case0]", "parametrize", "pytestmark", "test_case0", "test_api.py", "Py-test", "HackNUthon-rapidops", ""], "setup": {"duration": 0.0005286049999995157, "outcome": "passed"}, "call": {"duration": 1.8260757729999852, "outcome": "failed", "crash": {"path": "/home/runner/work/HackNUthon-rapidops/HackNUthon-rapidops/Py-test/test_api.py", "lineno": 85, "message": "Failed: \u274c Expected 200, but got 400"}, "traceback": [{"path": "Py-test/test_api.py", "lineno": 85, "message": "Failed"}], "stdout": "\nRequest: POST https://hack-n-uthon-6-0.vercel.app//api/user/signup\nPayload: {'Email': 'testuser@example.com', 'Password': 'StrongPass@123', 'Role': 'customer'}\nResponse Status: 400\nResponse Body: {\"error\":\"Email is already in use.\"}\n", "longrepr": "test_case = {'api_endpoint': '/api/user/signup', 'expected_response_keys': ['Email', 'token'], 'expected_status': 200, 'method': 'POST', ...}\n\n    @pytest.mark.parametrize(\"test_case\", test_cases)\n    def test_api(test_case):\n        \"\"\"Dynamically test API endpoints from test_cases.json.\"\"\"\n        url = BASE_URL + test_case[\"api_endpoint\"]\n        method = test_case[\"method\"]\n        payload = test_case.get(\"payload\", {})\n        expected_status = test_case[\"expected_status\"]\n        expected_keys = test_case.get(\"expected_response_keys\", [])\n    \n        try:\n            response = requests.request(method, url, json=payload)\n    \n            # Log the response for debugging\n            print(f\"\\nRequest: {method} {url}\")\n            print(f\"Payload: {payload}\")\n            print(f\"Response Status: {response.status_code}\")\n            print(f\"Response Body: {response.text}\")\n    \n            # Assertions\n            if response.status_code != expected_status:\n                failed_tests.append(\n                    {\n                        \"api_endpoint\": test_case[\"api_endpoint\"],\n                        \"method\": method,\n                        \"payload\": payload,\n                        \"expected_status\": expected_status,\n                        \"actual_status\": response.status_code,\n                        \"error\": f\"Expected {expected_status}, got {response.status_code}\",\n                    }\n                )\n>               pytest.fail(f\"\u274c Expected {expected_status}, but got {response.status_code}\")\nE               Failed: \u274c Expected 200, but got 400\n\nPy-test/test_api.py:85: Failed"}, "teardown": {"duration": 0.00023297399999933077, "outcome": "passed"}}, {"nodeid": "Py-test/test_api.py::test_api[test_case1]", "lineno": 54, "outcome": "passed", "keywords": ["test_api[test_case1]", "parametrize", "pytestmark", "test_case1", "test_api.py", "Py-test", "HackNUthon-rapidops", ""], "setup": {"duration": 0.00025483499999268133, "outcome": "passed"}, "call": {"duration": 0.32694743600001175, "outcome": "passed", "stdout": "\nRequest: POST https://hack-n-uthon-6-0.vercel.app//api/user/login\nPayload: {'Email': 'testuser@example.com', 'Password': 'StrongPass@123'}\nResponse Status: 200\nResponse Body: {\"Email\":\"testuser@example.com\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2U5MmYyOGI0NGI5MGM3YzFmYTE0NzIiLCJSb2xlIjoiY3VzdG9tZXIiLCJpYXQiOjE3NDMzNDE4NjAsImV4cCI6MTc0MzYwMTA2MH0.RCB7qUyFQdOtKjG2MP8o4-7EbZjCa5Dcpm1Y5uan7AU\"}\n"}, "teardown": {"duration": 0.00022463799999172807, "outcome": "passed"}}, {"nodeid": "Py-test/test_api.py::test_api[test_case2]", "lineno": 54, "outcome": "passed", "keywords": ["test_api[test_case2]", "parametrize", "pytestmark", "test_case2", "test_api.py", "Py-test", "HackNUthon-rapidops", ""], "setup": {"duration": 0.0002757439999925282, "outcome": "passed"}, "call": {"duration": 0.11444391300000234, "outcome": "passed", "stdout": "\nRequest: GET https://hack-n-uthon-6-0.vercel.app//metrics\nPayload: {}\nResponse Status: 200\nResponse Body: # HELP http_requests_total Total number of HTTP requests\n# TYPE http_requests_total counter\nhttp_requests_total{method=\"POST\",route=\"/signup\",status_code=\"400\"} 1\nhttp_requests_total{method=\"POST\",route=\"/login\",status_code=\"200\"} 1\n\n# HELP http_response_time_seconds HTTP response time in seconds\n# TYPE http_response_time_seconds histogram\nhttp_response_time_seconds_bucket{le=\"0.1\",method=\"POST\",route=\"/signup\",status_code=\"400\"} 0\nhttp_response_time_seconds_bucket{le=\"0.5\",method=\"POST\",route=\"/signup\",status_code=\"400\"} 1\nhttp_response_time_seconds_bucket{le=\"1\",method=\"POST\",route=\"/signup\",status_code=\"400\"} 1\nhttp_response_time_seconds_bucket{le=\"1.5\",method=\"POST\",route=\"/signup\",status_code=\"400\"} 1\nhttp_response_time_seconds_bucket{le=\"2\",method=\"POST\",route=\"/signup\",status_code=\"400\"} 1\nhttp_response_time_seconds_bucket{le=\"5\",method=\"POST\",route=\"/signup\",status_code=\"400\"} 1\nhttp_response_time_seconds_bucket{le=\"+Inf\",method=\"POST\",route=\"/signup\",status_code=\"400\"} 1\nhttp_response_time_seconds_sum{method=\"POST\",route=\"/signup\",status_code=\"400\"} 0.103\nhttp_response_time_seconds_count{method=\"POST\",route=\"/signup\",status_code=\"400\"} 1\nhttp_response_time_seconds_bucket{le=\"0.1\",method=\"POST\",route=\"/login\",status_code=\"200\"} 0\nhttp_response_time_seconds_bucket{le=\"0.5\",method=\"POST\",route=\"/login\",status_code=\"200\"} 1\nhttp_response_time_seconds_bucket{le=\"1\",method=\"POST\",route=\"/login\",status_code=\"200\"} 1\nhttp_response_time_seconds_bucket{le=\"1.5\",method=\"POST\",route=\"/login\",status_code=\"200\"} 1\nhttp_response_time_seconds_bucket{le=\"2\",method=\"POST\",route=\"/login\",status_code=\"200\"} 1\nhttp_response_time_seconds_bucket{le=\"5\",method=\"POST\",route=\"/login\",status_code=\"200\"} 1\nhttp_response_time_seconds_bucket{le=\"+Inf\",method=\"POST\",route=\"/login\",status_code=\"200\"} 1\nhttp_response_time_seconds_sum{method=\"POST\",route=\"/login\",status_code=\"200\"} 0.211\nhttp_response_time_seconds_count{method=\"POST\",route=\"/login\",status_code=\"200\"} 1\n\n"}, "teardown": {"duration": 0.0004241899999897214, "outcome": "passed"}}]}